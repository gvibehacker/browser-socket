name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json
            cf-worker/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Generate documentation
        run: |
          # Install dependencies and generate client docs
          cd client
          npm ci
          npm run docs
          cd ..
          
          # Install dependencies and generate server docs
          cd server
          npm ci
          npm run docs
          cd ..
                    
          # Install dependencies and generate cloudflare worker docs
          cd cf-worker
          npm ci
          npm run docs
          cd ..

      - name: Create deployment structure
        run: |
          mkdir -p _site
          
          # Copy examples
          mkdir -p _site/examples
          cp -r examples/dns _site/examples/
          cp -r examples/web-server _site/examples/
          
          # Copy generated docs
          mkdir -p _site/docs
          if [ -d "client/docs" ]; then
            cp -r client/docs _site/docs/client
          fi
          if [ -d "server/docs" ]; then
            cp -r server/docs _site/docs/server
          fi
          if [ -d "cf-worker/docs" ]; then
            cp -r server/docs _site/docs/cloudflare-worker
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4